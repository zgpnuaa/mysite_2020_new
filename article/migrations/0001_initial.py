# Generated by Django 2.1.7 on 2020-04-18 02:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('interviewee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interviewee', to=settings.AUTH_USER_MODEL, verbose_name='被邀请者')),
                ('interviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='interviewer', to=settings.AUTH_USER_MODEL, verbose_name='邀请者')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.CharField(max_length=200, verbose_name='栏目名称')),
                ('created', models.DateField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_column', to=settings.AUTH_USER_MODEL, verbose_name='栏目作者')),
            ],
            options={
                'verbose_name': '栏目信息',
                'verbose_name_plural': '栏目信息',
            },
        ),
        migrations.CreateModel(
            name='ArticlePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='题目')),
                ('slug', models.SlugField(max_length=500)),
                ('body', models.TextField(verbose_name='内容')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='发布时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('voteanonymousornot', models.BooleanField(blank=True, default=True, verbose_name='投票/问卷是否匿名制')),
                ('votedeadline', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='问卷投票截止时间')),
                ('approved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '文章信息',
                'verbose_name_plural': '文章信息',
                'ordering': ('-updated',),
            },
        ),
        migrations.CreateModel(
            name='ArticleProcessFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='描述')),
                ('opinion', models.TextField(verbose_name='审批意见')),
                ('applicationdate', models.DateTimeField(default=django.utils.timezone.now, verbose_name='发起时间')),
                ('modifytime', models.DateTimeField(auto_now_add=True, verbose_name='修改时间')),
                ('approvaldate', models.DateTimeField(auto_now_add=True, verbose_name='审批时间')),
                ('approved', models.BooleanField(default=False, verbose_name='是否批准')),
                ('state', models.IntegerField(default=0, help_text='0：草稿；1：审批中；2：被驳回；3：已发布；4：已撤回；5：已删除', verbose_name='当前状态')),
                ('handle', models.IntegerField(default=0, help_text='0：草稿制作；1：发起审批；2：同意；3：驳回；4：撤回；5：删除', verbose_name='当前处理')),
                ('applicant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applicant', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('approver', models.ManyToManyField(related_name='approver', to=settings.AUTH_USER_MODEL, verbose_name='审批人')),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvearticle', to='article.ArticlePost', verbose_name='审批文章')),
            ],
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=500)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tag', to=settings.AUTH_USER_MODEL, verbose_name='标签作者')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentator', models.CharField(max_length=90)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='article.ArticlePost')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CommentMulti',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_content', models.TextField(null='true')),
                ('comment_parent_id', models.CharField(max_length=300, null='true')),
                ('comment_article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comment_article', to='article.ArticlePost')),
                ('comment_like', models.ManyToManyField(blank=True, related_name='commentmulti_like', to=settings.AUTH_USER_MODEL)),
                ('comment_user', models.ForeignKey(null='true', on_delete=django.db.models.deletion.CASCADE, related_name='commentmulti_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStateRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(default=0, help_text='0：草稿；1：审批中；2：被驳回；3：已发布；4：已撤回；5：已删除', verbose_name='当前状态')),
                ('handle', models.IntegerField(default=0, help_text='0：草稿制作；1：发起审批；2：同意；3：驳回；4：撤回；5：删除', verbose_name='当前处理')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='处理时间')),
                ('approve_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approveuser', to=settings.AUTH_USER_MODEL, verbose_name='当前发起人')),
                ('handle_user', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='handleuser', to=settings.AUTH_USER_MODEL, verbose_name='当前处理人')),
                ('process', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='article.ArticleProcessFlow', verbose_name='流程')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='问题')),
                ('required', models.BooleanField(verbose_name='是否必填')),
                ('question_type', models.CharField(choices=[('text', '文本'), ('radio', '单选按钮'), ('select', '单选下拉列表'), ('select-multiple', '多选框'), ('integer', '整数'), ('float', '实数')], default='text', max_length=200, verbose_name='问题类型')),
                ('choices', models.TextField(blank=True, help_text='如果问题类型为单选按钮、单选下拉列表或多选框，请提供用英文逗号分隔的问题选项！', null=True, verbose_name='问题选项')),
                ('survey', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.ArticlePost', verbose_name='关联文章')),
            ],
        ),
        migrations.AddField(
            model_name='articlepost',
            name='article_tag',
            field=models.ManyToManyField(blank=True, related_name='article_tag', to='article.ArticleTag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='articlepost',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article', to=settings.AUTH_USER_MODEL, verbose_name='作者'),
        ),
        migrations.AddField(
            model_name='articlepost',
            name='column',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='article_column', to='article.ArticleColumn', verbose_name='栏目'),
        ),
        migrations.AddField(
            model_name='articlepost',
            name='usercanvote',
            field=models.ManyToManyField(blank=True, related_name='user_canvote', to=settings.AUTH_USER_MODEL, verbose_name='问卷/投票范围'),
        ),
        migrations.AddField(
            model_name='articlepost',
            name='userhasvoted',
            field=models.ManyToManyField(blank=True, related_name='user_hasvoted', to=settings.AUTH_USER_MODEL, verbose_name='已投票'),
        ),
        migrations.AddField(
            model_name='articlepost',
            name='users_like',
            field=models.ManyToManyField(blank=True, related_name='articles_like', to=settings.AUTH_USER_MODEL, verbose_name='点赞用户'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='survey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='article.ArticlePost'),
        ),
        migrations.AlterIndexTogether(
            name='articlepost',
            index_together={('id', 'slug')},
        ),
    ]
